# -*- coding: utf-8 -*-
# this file is released under public domain and you can use without limitations

#########################################################################
## This is a sample controller
## - index is the default action of any application
## - user is required for authentication and authorization
## - download is for downloading files uploaded in the db (does streaming)
## - call exposes all registered services (none by default)
#########################################################################
import time
import math
import datetime
import sys
path = "C:\Users\Aster\Desktop\web2py\site-packages"
if path not in sys.path:
    sys.path.append(path)
import serial
PuertoSerie= serial.Serial('COM5', 9600)
PuertoSerie.close()
PuertoSerie.open()
#time.sleep(4)
def index():
    """
    example action using the internationalization operator T and flash
    rendered by views/default/index.html or views/generic.html

    if you need a simple wiki simply replace the two lines below with:
    return auth.wiki()
    """
    response.flash = T("Bienvenido al SCADA de Asterio")
    return dict(message=T('Hello World'))

def recibe_datos():
    #PuertoSerie.open()
    #time.sleep(2)
    operando1=(request.vars.estado1)
    if operando1=="H": 
        PuertoSerie.write(operando1)
        resultado={'estado1': "L"}
    if operando1=="L":
        PuertoSerie.write(operando1)
        resultado={'estado1': "H"}
    #PuertoSerie.close()
    return resultado

def pide_hora():
    hora=datetime.datetime.now().strftime("%H:%M:%S")
    fecha=datetime.datetime.now().strftime("%d-%m-%Y")
    return dict(hora=hora,fecha=fecha)

def recibe_datos2():
    #PuertoSerie.open()
    #time.sleep(2.5)
    operando2=(request.vars.estado2)
    if operando2=="A":
        PuertoSerie.write(operando2)
        resultado2= {'estado1': "B"}
    if operando2=="B":
        PuertoSerie.write(operando2)
        resultado2= {'estado1': "A"}
    #PuertoSerie.close()
    return resultado2

def recibe_datos3():
    #PuertoSerie.open()
    #time.sleep(2)
    PuertoSerie.write("N")
    #time.sleep(0.5)
    a=PuertoSerie.readline()
    b=a.split()
    c=b[0]
    #PuertoSerie.close()
    return c

def user():
    """
    exposes:
    http://..../[app]/default/user/login
    http://..../[app]/default/user/logout
    http://..../[app]/default/user/register
    http://..../[app]/default/user/profile
    http://..../[app]/default/user/retrieve_password
    http://..../[app]/default/user/change_password
    http://..../[app]/default/user/manage_users (requires membership in
    use @auth.requires_login()
        @auth.requires_membership('group name')
        @auth.requires_permission('read','table name',record_id)
    to decorate functions that need access control
    """
    return dict(form=auth())

@cache.action()
def download():
    """
    allows downloading of uploaded files
    http://..../[app]/default/download/[filename]
    """
    return response.download(request, db)


def call():
    """
    exposes services. for example:
    http://..../[app]/default/call/jsonrpc
    decorate with @services.jsonrpc the functions to expose
    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv
    """
    return service()


@auth.requires_signature()
def data():
    """
    http://..../[app]/default/data/tables
    http://..../[app]/default/data/create/[table]
    http://..../[app]/default/data/read/[table]/[id]
    http://..../[app]/default/data/update/[table]/[id]
    http://..../[app]/default/data/delete/[table]/[id]
    http://..../[app]/default/data/select/[table]
    http://..../[app]/default/data/search/[table]
    but URLs must be signed, i.e. linked with
      A('table',_href=URL('data/tables',user_signature=True))
    or with the signed load operator
      LOAD('default','data.load',args='tables',ajax=True,user_signature=True)
    """
    return dict(form=crud())
#PuertoSerie.close()
